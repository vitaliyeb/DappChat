{"version":3,"sources":["components/ActionsPanel/style.module.css","styles.module.css","components/Chat/style.module.css","utils/getWeb3.js","components/Messages/index.js","components/ActionsPanel/index.js","components/Chat/index.js","App.js","index.js","components/Messages/style.module.css"],"names":["module","exports","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Messages","web3State","useState","messages","setMessages","targetBottomScroll","useRef","account","contract","useEffect","methods","getMessages","call","current","scrollIntoView","eventEmitter","events","NewMessage","on","event","returnValues","unsubscribe","className","styles","wrapper","messageArea","map","message","key","owner","messageOwner","join","value","ref","ActionsPanel","setValue","sendMessage","pushMessage","send","from","status","inputWrapper","onChange","e","target","type","onClick","aria-hidden","viewBox","d","Chat","reducer","state","payload","App","isLoading","setIsLoading","useReducer","dispatch","init","eth","getAccounts","net","getId","networkId","Contract","ChatContract","abi","networks","address","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c29d7e3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__1HWOV\",\"inputWrapper\":\"style_inputWrapper__2XjeB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles_app__1aTJl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__y-q2-\"};","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:7545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, {useEffect, useRef, useState} from \"react\";\nimport styles from './style.module.css';\n\nconst Messages = ({ web3State }) => {\n    let [messages, setMessages] = useState([]);\n    const targetBottomScroll = useRef(null);\n    let { account, web3, contract } = web3State;\n\n    useEffect(() => {\n        (async () => {\n            setMessages(await contract.methods.getMessages().call())\n            targetBottomScroll.current.scrollIntoView();\n        })()\n    }, []);\n\n    useEffect(() => {\n        const eventEmitter = contract.events.NewMessage().on(\"data\", (event) => {\n            setMessages([...messages, event.returnValues]);\n        });\n        return () => eventEmitter.unsubscribe();\n    })\n\n    const isOwner = ({ owner }) => owner === account;\n\n    return (<div className={styles.wrapper}>\n        <div className={styles.messageArea}>\n            {\n                messages.map((message, key) => (<p\n                    className={[styles.message, isOwner(message) && styles.messageOwner].join(' ')}\n                    key={key}\n                >   <span>{ message.owner }</span>\n                    {message.value}\n                </p>))\n            }\n            <div ref={targetBottomScroll}/>\n        </div>\n    </div>)\n}\n\nexport default Messages;\n","import React, {useEffect, useState} from \"react\";\nimport styles from './style.module.css';\n\nconst ActionsPanel = ({ web3State }) => {\n    const [value, setValue] = useState('');\n    const { account, web3, contract } = web3State;\n\n    const sendMessage = async () => {\n        const response = await contract.methods.pushMessage(value).send({\n            from: account\n        });\n        if (response.status) setValue('');\n    };\n\n    return (<div className={styles.wrapper}>\n        <div className={styles.inputWrapper}>\n            <input value={value} onChange={(e) => setValue(e.target.value)} type=\"text\"/>\n            <button onClick={sendMessage}>\n                <svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n                    <path d=\"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"></path>\n                </svg>\n            </button>\n        </div>\n    </div>)\n}\n\nexport default ActionsPanel;\n","import React from \"react\";\nimport styles from './style.module.css';\nimport Messages from \"../Messages\";\nimport ActionsPanel from \"../ActionsPanel\";\n\nconst Chat = ({ web3State }) => {\n    return (<div className={styles.wrapper}>\n        <Messages web3State={web3State} />\n        <ActionsPanel web3State={web3State} />\n    </div>)\n}\n\nexport default Chat;\n","import React, {useEffect, useReducer, useState} from \"react\";\nimport ChatContract from \"./contracts/Chat.json\";\nimport Web3 from \"web3\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport styles from \"./styles.module.css\";\nimport Chat from \"./components/Chat\";\n\nconst reducer = (state, {type, payload}) => {\n    switch (type){\n        case 'init':\n            return {\n                ...payload\n            }\n        default:\n            return state;\n    }\n}\n\nconst App = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [web3State, dispatch] = useReducer(reducer, {\n        contract: null,\n        web3: null,\n        account: null\n    });\n\n    const init = async () => {\n        const web3 = await getWeb3();\n        const account = (await web3.eth.getAccounts())[0];\n        const networkId = await web3.eth.net.getId();\n        const contract = new web3.eth.Contract(ChatContract.abi, ChatContract.networks[networkId].address);\n\n        dispatch({ type: 'init', payload: {\n                contract: contract,\n                web3: web3,\n                account: account\n            }\n        })\n        setIsLoading(false);\n    }\n\n    useEffect(()=>{\n        init();\n    }, []);\n\n\n    return (<div className={styles.app}>\n        { !isLoading &&  <Chat web3State={web3State} /> }\n    </div>)\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__Eg1nV\",\"messageArea\":\"style_messageArea__1-ApT\",\"message\":\"style_message__1Rxxk\",\"messageOwner\":\"style_messageOwner__1OSlh\"};"],"sourceRoot":""}